<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="eventsLogSQL">
	<resultMap id="eventsLogResult" class="events">
		<result property="eventsId" column="LOG_ID" />
		<result property="name" column="LOG_NAME" />
		<result property="aggregatedCount" column="LOG_AGGREGATED_COUNT" />
		<result property="systype" column="LOG_SYSTYPE" />
		<result property="collectType" column="LOG_COLLECTTYPE" />
		<result property="sensorAddr" column="LOG_SENSORADDR" />
		<result property="sensorName" column="LOG_SENSORNAME" />
		<result property="collectorAddr" column="LOG_COLLECTORADDR" />
		<result property="collectorName" column="LOG_COLLECTORNAME" />
		<result property="cateGory" column="LOG_CATEGORY" />
		<result property="type" column="LOG_TYPE" />
		<result property="priority" column="LOG_PRIORITY" />
		<result property="oriPriority" column="LOG_ORIPRIORITY" />
		<result property="rawId" column="LOG_RAWID" />
		<result property="duration" column="LOG_DURATION" />
		<result property="send" column="LOG_SEND" />
		<result property="receive" column="LOG_RECEIVE" />
		<result property="protocol" column="LOG_PROTOCOL" />
		<result property="object" column="LOG_OBJECT" />
		<result property="policy" column="LOG_POLICY" />
		<result property="resource" column="LOG_RESOURCE" />
		<result property="action" column="LOG_ACTION" />
		<result property="intent" column="LOG_INTENT" />
		<result property="result" column="LOG_RESULT" />
		<result property="sAddr" column="LOG_SADDR" />
		<result property="sName" column="LOG_SNAME" />
		<result property="sPort" column="LOG_SPORT" />
		<result property="sprocess" column="LOG_SPROCESS" />
		<result property="suserId" column="LOG_SUSERID" />
		<result property="suserName" column="LOG_SUSERNAME" />
		<result property="sTAddr" column="LOG_STADDR" />
		<result property="sTPort" column="LOG_STPORT" />
		<result property="dAddr" column="LOG_DADDR" />
		<result property="dName" column="LOG_DNAME" />
		<result property="dPort" column="LOG_DPORT" />
		<result property="dProcess" column="LOG_DPROCESS" />
		<result property="dUserId" column="LOG_DUSERID" />
		<result property="dUserName" column="LOG_DUSERNAME" />
		<result property="dTAddr" column="LOG_DTADDR" />
		<result property="dTPort" column="LOG_DTPORT" />
		<result property="devAdd" column="LOG_DEVADDR" />
		<result property="devName" column="LOG_DEVNAME" />
		<result property="devCategory" column="LOG_DEVCATEGORY" />
		<result property="devType" column="LOG_DEVTYPE" />
		<result property="devVendor" column="LOG_DEVVENDOR" />
		<result property="programType" column="LOG_PROGRAMTYPE" />
		<result property="program" column="LOG_PROGRAM" />
		<result property="customs1" column="LOG_CUSTOMS1" />
		<result property="customs2" column="LOG_CUSTOMS2" />
		<result property="customs3" column="LOG_CUSTOMS3" />
		<result property="customs4" column="LOG_CUSTOMS4" />
		<result property="customd1" column="LOG_CUSTOMD1" />
		<result property="customd2" column="CUSTOMD2" />
		<result property="devproduct" column="LOG_DEVPRODUCT" />
		<result property="sessionId" column="LOG_SESSIONID" />
		<result property="customs5" column="LOG_CUSTOMS5" />
		<result property="customs6" column="LOG_SUSTOMS6" />
		<result property="customs7" column="CUSTOMS7" />
		<result property="customd3" column="CUSTOMD3" />
		<result property="customd4" column="CUSTOMD4" />
		<result property="requesturi" column="LOG_REQUESTURI" />
		<result property="msg" column="LOG_MSG" />
		<result property="sendTime" column="LOG_SENDTIME" />
		<result property="receptTime" column="LOG_RECEPT_TIME" />
		<result property="identification" column="LOG_IDENTIFICATION" />
		<result property="appProtocol" column="LOG_APPPROTOCOL" />
		<result property="originLog" column="LOG_IDENTIFICATION"
			select="sqlServerquery.originLog" />
		<result property="assetId" column="LOG_ASSET_ID" />
	</resultMap>
	<!-- 关联后事件入库-->
<insert id="pgAdminrelevanceEvents.insert" parameterClass="events">
		INSERT INTO "tbl_relevance_events"
		(
		"LOG_NAME",
		"LOG_AGGREGATED_COUNT",
		"LOG_SYSTYPE",
		"LOG_COLLECTTYPE",
		"LOG_SENSORADDR",
		"LOG_SENSORNAME",
		"LOG_COLLECTORADDR",
		"LOG_COLLECTORNAME",
		"LOG_CATEGORY",
		"LOG_TYPE",
		"LOG_PRIORITY",
		"LOG_ORIPRIORITY",
		"LOG_RAWID",
		"LOG_DURATION",
		"LOG_SEND",
		"LOG_RECEIVE",
		"LOG_PROTOCOL",
		"LOG_OBJECT",
		"LOG_POLICY",
		"LOG_RESOURCE",
		"LOG_ACTION",
		"LOG_INTENT",
		"LOG_RESULT",
		"LOG_SADDR",
		"LOG_SNAME",
		"LOG_SPORT",
		"LOG_SPROCESS",
		"LOG_SUSERID",
		"LOG_SUSERNAME",
		"LOG_STADDR",
		"LOG_STPORT",
		"LOG_DADDR",
		"LOG_DNAME",
		"LOG_DPORT",
		"LOG_DPROCESS",
		"LOG_DUSERID",
		"LOG_DUSERNAME",
		"LOG_DTADDR",
		"LOG_DTPORT",
		"LOG_DEVADDR",
		"LOG_DEVNAME",
		"LOG_DEVCATEGORY",
		"LOG_DEVTYPE",
		"LOG_DEVVENDOR",
		"LOG_PROGRAMTYPE",
		"LOG_PROGRAM",
		"LOG_CUSTOMS1",
		"LOG_CUSTOMS2",
		"LOG_CUSTOMS3",
		"LOG_CUSTOMS4",
		"LOG_CUSTOMD1",
		"CUSTOMD2",
		"LOG_DEVPRODUCT",
		"LOG_SESSIONID",
		"LOG_CUSTOMS5",
		"LOG_SUSTOMS6",
		"CUSTOMS7",
		"CUSTOMD3",
		"CUSTOMD4",
		"LOG_REQUESTURI",
		"LOG_MSG",
		"LOG_SENDTIME",
		"LOG_RECEPT_TIME",
		"LOG_IDENTIFICATION",
		"LOG_APPPROTOCOL",
		"LOG_ASSET_ID")
		VALUES (#name#,
		#aggregatedCount#,
		#systype#,
		#collectType#,
		#sensorAddr#,
		#sensorName#,
		#collectorAddr#,
		#collectorName#,
		#cateGory#,
		#type#,
		#priority#,
		#oriPriority#,
		#rawId#,
		#duration#,
		#send#,
		#receive#,
		#protocol#,
		#object#,
		#policy#,
		#resource#,
		#action#,
		#intent#,
		#result#,
		#sAddr#,
		#sName#,
		#sPort#,
		#sprocess#,
		#suserId#,
		#suserName#,
		#sTAddr#,
		#sTPort#,
		#dAddr#,
		#dName#,
		#dPort#,
		#dProcess#,
		#dUserId#,
		#dUserName#,
		#dTAddr#,
		#dTPort#,
		#devAdd#,
		#devName#,
		#devCategory#,
		#devType#,
		#devVendor#,
		#programType#,
		#program#,
		#customs1#,
		#customs2#,
		#customs3#,
		#customs4#,
		#customd1#,
		#customd2#,
		#devproduct#,
		#sessionId#,
		#customs5#,
		#customs6#,
		#customs7#,
		#customd3#,
		#customd4#,
		#requesturi#,
		#msg#,
		#sendTime#,
		#receptTime#,
		#identification#,
		#appProtocol#,
		#assetId#);
		<!-- <selectKey resultClass="java.lang.Long" keyProperty="eventsId" > SELECT 
			currval('tbl_log_seq'::regclass) AS "eventsId" </selectKey> -->
	</insert>
	<!-- 分页查询 -->
	   <select id="pgAdminrelevanceEvents.queryRelevanceEvents" parameterClass="java.util.HashMap" resultMap="eventsLogResult" resultClass="events">
      select * from $tableName$  where 1=1 
      
      <isNotEmpty  prepend="AND" property="id">
			<![CDATA[
				 "LOG_ID" = #id#
			]]>
		</isNotEmpty>
      
      order by  "LOG_ID" desc
     </select>
 	<!-- count -->
	<select id="pgAdminrelevanceEvents.count" parameterClass="java.util.HashMap"
		resultClass="int">
		select count("LOG_ID") from "tbl_relevance_events"
	
	</select>
	 	<!-- 关联后事件count -->
	<select id="pgAdminrelevanceEvents.countAtnalyticEvents" parameterClass="java.util.HashMap"
		resultClass="int">
		 select count("LOG_ID") from $tableName$ 
      
				where "LOG_IDENTIFICATION" in ($identification$)
		
      
     
	
	
	</select>
	<!-- 查询出产生关联后事件的解析事件 -->
	  <select id="pgAdminrelevanceEvents.queryAtnalyticEvents" parameterClass="java.util.HashMap" resultMap="eventsLogResult" resultClass="events">
      select * from $tableName$ 
      
				where "LOG_IDENTIFICATION" in ($identification$)
		
      
      order by  "LOG_ID" desc
     </select>
	<!-- sqlserver -->
	<!-- 关联后事件入库-->
<insert id="sqlServerrelevanceEvents.insert" parameterClass="events">
		INSERT INTO "tbl_relevance_events"
		(
		"LOG_NAME",
		"LOG_AGGREGATED_COUNT",
		"LOG_SYSTYPE",
		"LOG_COLLECTTYPE",
		"LOG_SENSORADDR",
		"LOG_SENSORNAME",
		"LOG_COLLECTORADDR",
		"LOG_COLLECTORNAME",
		"LOG_CATEGORY",
		"LOG_TYPE",
		"LOG_PRIORITY",
		"LOG_ORIPRIORITY",
		"LOG_RAWID",
		"LOG_DURATION",
		"LOG_SEND",
		"LOG_RECEIVE",
		"LOG_PROTOCOL",
		"LOG_OBJECT",
		"LOG_POLICY",
		"LOG_RESOURCE",
		"LOG_ACTION",
		"LOG_INTENT",
		"LOG_RESULT",
		"LOG_SADDR",
		"LOG_SNAME",
		"LOG_SPORT",
		"LOG_SPROCESS",
		"LOG_SUSERID",
		"LOG_SUSERNAME",
		"LOG_STADDR",
		"LOG_STPORT",
		"LOG_DADDR",
		"LOG_DNAME",
		"LOG_DPORT",
		"LOG_DPROCESS",
		"LOG_DUSERID",
		"LOG_DUSERNAME",
		"LOG_DTADDR",
		"LOG_DTPORT",
		"LOG_DEVADDR",
		"LOG_DEVNAME",
		"LOG_DEVCATEGORY",
		"LOG_DEVTYPE",
		"LOG_DEVVENDOR",
		"LOG_PROGRAMTYPE",
		"LOG_PROGRAM",
		"LOG_CUSTOMS1",
		"LOG_CUSTOMS2",
		"LOG_CUSTOMS3",
		"LOG_CUSTOMS4",
		"LOG_CUSTOMD1",
		"CUSTOMD2",
		"LOG_DEVPRODUCT",
		"LOG_SESSIONID",
		"LOG_CUSTOMS5",
		"LOG_SUSTOMS6",
		"CUSTOMS7",
		"CUSTOMD3",
		"CUSTOMD4",
		"LOG_REQUESTURI",
		"LOG_MSG",
		"LOG_SENDTIME",
		"LOG_RECEPT_TIME",
		"LOG_IDENTIFICATION",
		"LOG_APPPROTOCOL",
		"LOG_ASSET_ID")
		VALUES (#name#,
		#aggregatedCount#,
		#systype#,
		#collectType#,
		#sensorAddr#,
		#sensorName#,
		#collectorAddr#,
		#collectorName#,
		#cateGory#,
		#type#,
		#priority#,
		#oriPriority#,
		#rawId#,
		#duration#,
		#send#,
		#receive#,
		#protocol#,
		#object#,
		#policy#,
		#resource#,
		#action#,
		#intent#,
		#result#,
		#sAddr#,
		#sName#,
		#sPort#,
		#sprocess#,
		#suserId#,
		#suserName#,
		#sTAddr#,
		#sTPort#,
		#dAddr#,
		#dName#,
		#dPort#,
		#dProcess#,
		#dUserId#,
		#dUserName#,
		#dTAddr#,
		#dTPort#,
		#devAdd#,
		#devName#,
		#devCategory#,
		#devType#,
		#devVendor#,
		#programType#,
		#program#,
		#customs1#,
		#customs2#,
		#customs3#,
		#customs4#,
		#customd1#,
		#customd2#,
		#devproduct#,
		#sessionId#,
		#customs5#,
		#customs6#,
		#customs7#,
		#customd3#,
		#customd4#,
		#requesturi#,
		#msg#,
		#sendTime#,
		#receptTime#,
		#identification#,
		#appProtocol#,
		#assetId#);
		<!-- <selectKey resultClass="java.lang.Long" keyProperty="eventsId" > SELECT 
			currval('tbl_log_seq'::regclass) AS "eventsId" </selectKey> -->
	</insert>
	<!-- 分页查询 -->
	   <select id="sqlServerrelevanceEvents.queryRelevanceEvents" parameterClass="java.util.HashMap" resultMap="eventsLogResult" resultClass="events">
      select * from $tableName$  where 1=1 
      
      <isNotEmpty  prepend="AND" property="id">
			<![CDATA[
				 "LOG_ID" = #id#
			]]>
		</isNotEmpty>
      
      order by  "LOG_ID" desc
     </select>
 	<!-- count -->
	<select id="sqlServerrelevanceEvents.count" parameterClass="java.util.HashMap"
		resultClass="int">
		select count("LOG_ID") from "tbl_relevance_events"
	
	</select>
	 	<!-- 关联后事件count -->
	<select id="sqlServerrelevanceEvents.countAtnalyticEvents" parameterClass="java.util.HashMap"
		resultClass="int">
		 select count("LOG_ID") from $tableName$ 
      
				where "LOG_IDENTIFICATION" in ($identification$)
		
      
     
	
	
	</select>
	<!-- 查询出产生关联后事件的解析事件 -->
	  <select id="sqlServerrelevanceEvents.queryAtnalyticEvents" parameterClass="java.util.HashMap" resultMap="eventsLogResult" resultClass="events">
      select * from $tableName$ 
      
				where "LOG_IDENTIFICATION" in ($identification$)
		
      
      order by  "LOG_ID" desc
     </select>
</sqlMap>